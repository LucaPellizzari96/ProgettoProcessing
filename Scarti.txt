main:

// Gestisco il movimento del personaggio tramite i tasti freccia
void keyPressed(){
  switch(keyCode){ // keyCode : variabile speciale per riconoscere alcuni caratteri particolari
    case UP:
      character.moveUp();
      break;
    case DOWN:
      character.moveDown();
      break;
    case LEFT:
      character.moveLeft();
      break;
    case RIGHT:
      character.moveRight();
      break;   
    default:
      break;
  }
} // keyPressed()


  /*
  for(int i = 0; i < fft.specSize(); i++)
  {
    // draw the line for frequency band i, scaling it up a bit so we can see it
    line( i, height, i, height - fft.getBand(i)*8 ); // spettro "lineare" di prova solo per vedere che sia corretto
    
  }
  */
  
character:

  //private float dx = 10.0; // spostamento su x
  //private float dy = 10.0; // spostamento su y

  //void moveLeft(){
  //    x -= dx;
  //}
  
  //void moveRight(){
  //  x += dx;
  //}
  
  //void moveUp(){
  //  y -= dy;
  //}
  
  //void moveDown(){
  //  y += dy;
  //}
  
spectrum:

class Spectrum{
  
  float [] zSpettri = {0.05, 0.65, 1.25};
  
  void shift(){
    for(int k=2; k > 0; k--){
      zSpettri[k] = zSpettri[k-1];
    }  // for
      zSpettri[0] = zMin; // setto al minimo il valore che e' andato oltre il limite
  }  // void shift()
  
  void display(){
    for(int j = 0; j < 3; j++){ // per ogni spettro (4 in totale)
      
      angolo = 0; // angolo per lo spettro attorno alla circonferenza (che diventera un'ellisse)
      
      for(int i = 0; i < fft.specSize(); i++){ // disegno lo spettro in forma ellittica
    
        float raggio = map(fft.getBand(i), 0, 1, 200, 300);  // mappo il valore di fft.getBand(i) fra 200 e 300 per allontanarmi dal centro dello schermo
        
        // moltiplico il raggio per allontanare la scena dal centro dello schermo
        line( zSpettri[j]*raggio*cos(radians(angolo))*a, zSpettri[j]*raggio*sin(radians(angolo)), (zSpettri[j]+0.025)*raggio*cos(radians(angolo))*a, (zSpettri[j]+0.025)*raggio*sin(radians(angolo)) );
    
        angolo += incrementoAngolo;
      } // for
      
      zSpettri[j] += 0.005;
      
    } // for
    
    if(zSpettri[2] >= zMax){  // se il primo spettro esce dalla scena
      shift();
    }
    
 } // void display()

} // classe Spectrum

  
  